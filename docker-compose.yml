services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: todo-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - todo-network

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      MONGODB_URI: ${MONGODB_URI}
      CORS_ORIGIN: ${CORS_ORIGIN}
    ports:
      - "3000:3000"
    volumes:
      - ./Backend:/app
      - /app/node_modules
    networks:
      - todo-network
    depends_on:
      - mongodb

  # Frontend React App
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: todo-frontend
    restart: always
    ports:
      - "80:80"
    networks:
      - todo-network
    depends_on:
      - backend

# Networks
networks:
  todo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  mongodb_data:
    driver: local
